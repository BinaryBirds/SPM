{"formatVersion":"1.0","generatedAt":"2022-01-19T18:41:06Z","generatedBy":{"name":"Tibor BÃ¶decs"},"keywords":["favorite"],"name":"Binary Birds packages","overview":"This collection contains the our favorite Swift packages.","packages":[{"keywords":["dsl","html","result-builder","swift","swift-5","swift-5-5","swift-html","swift-package-manager"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/BinaryBirds/swift-html/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/BinaryBirds/swift-html/main/README.md","summary":"An awesome Swift HTML DSL library using result builders.","url":"https://github.com/binarybirds/swift-html","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"swift-html","products":[{"name":"SwiftHtml","targets":["SwiftHtml"],"type":{"library":["automatic"]}},{"name":"SwiftRss","targets":["SwiftRss"],"type":{"library":["automatic"]}},{"name":"SwiftSgml","targets":["SwiftSgml"],"type":{"library":["automatic"]}},{"name":"SwiftSitemap","targets":["SwiftSitemap"],"type":{"library":["automatic"]}},{"name":"SwiftSvg","targets":["SwiftSvg"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftHtml","name":"SwiftHtml"},{"moduleName":"SwiftRss","name":"SwiftRss"},{"moduleName":"SwiftSgml","name":"SwiftSgml"},{"moduleName":"SwiftSitemap","name":"SwiftSitemap"},{"moduleName":"SwiftSvg","name":"SwiftSvg"}],"toolsVersion":"5.3"}},"version":"1.2.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"swift-html","products":[{"name":"SwiftHtml","targets":["SwiftHtml"],"type":{"library":["automatic"]}},{"name":"SwiftRss","targets":["SwiftRss"],"type":{"library":["automatic"]}},{"name":"SwiftSgml","targets":["SwiftSgml"],"type":{"library":["automatic"]}},{"name":"SwiftSitemap","targets":["SwiftSitemap"],"type":{"library":["automatic"]}},{"name":"SwiftSvg","targets":["SwiftSvg"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftHtml","name":"SwiftHtml"},{"moduleName":"SwiftRss","name":"SwiftRss"},{"moduleName":"SwiftSgml","name":"SwiftSgml"},{"moduleName":"SwiftSitemap","name":"SwiftSitemap"},{"moduleName":"SwiftSvg","name":"SwiftSvg"}],"toolsVersion":"5.3"}},"version":"1.2.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"swift-html","products":[{"name":"SwiftHtml","targets":["SwiftHtml"],"type":{"library":["automatic"]}},{"name":"SwiftRss","targets":["SwiftRss"],"type":{"library":["automatic"]}},{"name":"SwiftSgml","targets":["SwiftSgml"],"type":{"library":["automatic"]}},{"name":"SwiftSitemap","targets":["SwiftSitemap"],"type":{"library":["automatic"]}},{"name":"SwiftSvg","targets":["SwiftSvg"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftHtml","name":"SwiftHtml"},{"moduleName":"SwiftRss","name":"SwiftRss"},{"moduleName":"SwiftSgml","name":"SwiftSgml"},{"moduleName":"SwiftSitemap","name":"SwiftSitemap"},{"moduleName":"SwiftSvg","name":"SwiftSvg"}],"toolsVersion":"5.3"}},"version":"1.1.0"}]},{"keywords":["aws","file-storage","liquid-kit","s3","swift-5-3","vapor-4"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/BinaryBirds/liquid/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/BinaryBirds/liquid/main/README.md","summary":"Abstract file storage component made for Vapor 4.","url":"https://github.com/BinaryBirds/liquid","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"liquid","products":[{"name":"Liquid","targets":["Liquid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Liquid","name":"Liquid"}],"toolsVersion":"5.5"}},"version":"1.3.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"liquid","products":[{"name":"Liquid","targets":["Liquid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Liquid","name":"Liquid"}],"toolsVersion":"5.5"}},"version":"1.3.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"liquid","products":[{"name":"Liquid","targets":["Liquid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Liquid","name":"Liquid"}],"toolsVersion":"5.3"}},"version":"1.3.0"}]},{"keywords":["file-storage","swift-5-3","swift-logger","swift-nio"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/BinaryBirds/liquid-kit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/BinaryBirds/liquid-kit/main/README.md","summary":"An abstract FileStorage solution, based on the SwiftNIO framework.","url":"https://github.com/BinaryBirds/liquid-kit","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"liquid-kit","products":[{"name":"LiquidKit","targets":["LiquidKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidKit","name":"LiquidKit"}],"toolsVersion":"5.5"}},"version":"1.3.4"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"liquid-kit","products":[{"name":"LiquidKit","targets":["LiquidKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidKit","name":"LiquidKit"}],"toolsVersion":"5.5"}},"version":"1.3.3"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"liquid-kit","products":[{"name":"LiquidKit","targets":["LiquidKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidKit","name":"LiquidKit"}],"toolsVersion":"5.5"}},"version":"1.3.2"}]},{"keywords":["file-storage","liquid-kit","swift-5-3","swift-nio"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/BinaryBirds/liquid-local-driver/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/BinaryBirds/liquid-local-driver/main/README.md","summary":"A local driver implementation for the LiquidKit file storage solution.","url":"https://github.com/BinaryBirds/liquid-local-driver","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"liquid-local-driver","products":[{"name":"LiquidLocalDriver","targets":["LiquidLocalDriver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidLocalDriver","name":"LiquidLocalDriver"}],"toolsVersion":"5.5"}},"version":"1.3.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"liquid-local-driver","products":[{"name":"LiquidLocalDriver","targets":["LiquidLocalDriver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidLocalDriver","name":"LiquidLocalDriver"}],"toolsVersion":"5.5"}},"version":"1.3.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"liquid-local-driver","products":[{"name":"LiquidLocalDriver","targets":["LiquidLocalDriver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidLocalDriver","name":"LiquidLocalDriver"}],"toolsVersion":"5.3"}},"version":"1.3.0"}]},{"keywords":["aws","aws-sdk-swift","file-storage","liquid-kit","s3","swift-5-3","swift-nio"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/BinaryBirds/liquid-aws-s3-driver/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/BinaryBirds/liquid-aws-s3-driver/main/README.md","summary":"AWS S3 driver implementation for the LiquidKit file storage solution, based on the Soto for AWS project.","url":"https://github.com/BinaryBirds/liquid-aws-s3-driver","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"liquid-aws-s3-driver","products":[{"name":"LiquidAwsS3Driver","targets":["LiquidAwsS3Driver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidAwsS3Driver","name":"LiquidAwsS3Driver"}],"toolsVersion":"5.5"}},"version":"1.3.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"liquid-aws-s3-driver","products":[{"name":"LiquidAwsS3Driver","targets":["LiquidAwsS3Driver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidAwsS3Driver","name":"LiquidAwsS3Driver"}],"toolsVersion":"5.5"}},"version":"1.3.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"liquid-aws-s3-driver","products":[{"name":"LiquidAwsS3Driver","targets":["LiquidAwsS3Driver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LiquidAwsS3Driver","name":"LiquidAwsS3Driver"}],"toolsVersion":"5.3"}},"version":"1.3.0"}]},{"keywords":["swift-5-3","tdd","unit-test","vapor-4","xctest","xctvapor"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/BinaryBirds/spec/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/BinaryBirds/spec/main/README.md","summary":"Unit testing Vapor 4 applications through declarative specifications.","url":"https://github.com/BinaryBirds/spec","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"spec","products":[{"name":"Spec","targets":["Spec"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Spec","name":"Spec"}],"toolsVersion":"5.3"}},"version":"1.2.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"spec","products":[{"name":"Spec","targets":["Spec"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Spec","name":"Spec"}],"toolsVersion":"5.3"}},"version":"1.2.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"spec","products":[{"name":"Spec","targets":["Spec"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Spec","name":"Spec"}],"toolsVersion":"5.3"}},"version":"1.2.0"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: Tibor Bodecs","organization":"Tibor Bodecs","organizationalUnit":"66WNSAMTN9","userID":"66WNSAMTN9"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGZVRDQ0JHR2dBd0lCQWdJUVlNa21KaGlPaEc2YVVvNTRMaU5oL0RBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXlNREV4T1RFNU1EWTFNVm9YRFRJek1ERXhPVEU1TURZMU1Gb3dnWVl4R2pBWUJnb0praWFKay9Jc1pBRUJEQW8yTmxkT1UwRk5WRTQ1TVM4d0xRWURWUVFERENaVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUZScFltOXlJRUp2WkdWamN6RVRNQkVHQTFVRUN3d0tOalpYVGxOQlRWUk9PVEVWTUJNR0ExVUVDZ3dNVkdsaWIzSWdRbTlrWldOek1Rc3dDUVlEVlFRR0V3SklWVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOOHd0TlUrSEUwYUtMZFNjbm8vUTVqMzNDbnJra1RRZzV5Y0dMSTQ5Q1dOc29zQWlFUENtWjhuRXZoN2x3aUFtVGdDNW5VYXQvdWZqZ0thZFVhRzJ5T21UaTBFZUw0Zkorb25wY0gwOXZGWWs4bkxsM05CWWpQQm5WNEZjQjAxS3RmUm1TNGtTS0lTbGV2eVNmTGhaTWFVdHFheDlEdVlpV3VTQzN4N2JHa240Y0tWelJVU1Z6ckhZT05NMUJ5N0JMMVh0aUxuTXFEQlhQbjVlVVRna0lQaDBZQ3doTS9SRHVYYzY1QmgvdEt4WGt0UUhtdDdaT29xUHJmNGo5eFZ2SHdUR3locXQ3U3hXbXRyZGZQVU0raDJJVXZidUl4cTc4MXgxNnBHNDEvcHZycDlMQUx2eEJyNVhsL2hPYmE5bm1ucCtSaks5aHByMyswR3JvcUZwcThDQXdFQUFhT0NBZkV3Z2dIdE1Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUNmN0FGWkQ1cjJRS2toSzVKaWhqREpmc3A3SXdRUVlJS3dZQkJRVUhBUUVFTlRBek1ERUdDQ3NHQVFVRkJ6QUJoaVZvZEhSd09pOHZiMk56Y0M1aGNIQnNaUzVqYjIwdmIyTnpjREF6TFhkM1pISm5NekU1TUlJQkhnWURWUjBnQklJQkZUQ0NBUkV3Z2dFTkJna3Foa2lHOTJOa0JRRXdnZjh3Z2NNR0NDc0dBUVVGQndJQ01JRzJESUd6VW1Wc2FXRnVZMlVnYjI0Z2RHaHBjeUJqWlhKMGFXWnBZMkYwWlNCaWVTQmhibmtnY0dGeWRIa2dZWE56ZFcxbGN5QmhZMk5sY0hSaGJtTmxJRzltSUhSb1pTQjBhR1Z1SUdGd2NHeHBZMkZpYkdVZ2MzUmhibVJoY21RZ2RHVnliWE1nWVc1a0lHTnZibVJwZEdsdmJuTWdiMllnZFhObExDQmpaWEowYVdacFkyRjBaU0J3YjJ4cFkza2dZVzVrSUdObGNuUnBabWxqWVhScGIyNGdjSEpoWTNScFkyVWdjM1JoZEdWdFpXNTBjeTR3TndZSUt3WUJCUVVIQWdFV0syaDBkSEJ6T2k4dmQzZDNMbUZ3Y0d4bExtTnZiUzlqWlhKMGFXWnBZMkYwWldGMWRHaHZjbWwwZVM4d0ZnWURWUjBsQVFIL0JBd3dDZ1lJS3dZQkJRVUhBd013SFFZRFZSME9CQllFRk5WUXNMRytZNVFCTk84SmwyWVZnak0yK3hLbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0RBUUJnb3Foa2lHOTJOa0JnRWpCQUlGQURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW9UR1VKeCs1UkNIR2VqbGRmcFpGWjRwdkVwUU95T0xhNmVqV2F5ck4yNlFleUtRblpzN25xNEFYY3ZiTGFEc1M1c2xzNzF4L1VyUytSSFgyb051N1c4ajA2U3lJMnovUE9aMko2dFZ4YVVPVFhQTEw4ajNPSG14RXBYTWdrV0MraktvdUEyVDFZWEJSM0lLVUlSMWYvSWNWeGRYa1lkdWdlSlc4SHFIOUkvWHEvMDVoOGdmUWxYaTd3WklxOTVPemdhRlhyYmZlR2NPM1VpRFRNUmJJOTR5NlVBdTRuWk1oRVkyeXliM1FvQ3dhLzlTMjRBNFRGNEh3akY4Q242NTBDRVRQdEl6WjNVTHUyd1QzZ3ExYzJOeWVIUVFZNEpyUkVTS1N2Qm5aajFjQWZrQjQrNktYRnVxeGNhWmRsMXhUYnNkSUoyMG1lVjNrellzaEpTYUdadz09IgogIF0KfQ..sQBCiJzGIPwnr6mgEKAWfajY5E1JIQN4tywag0WLz7XXQIaYOZwHr4QQ8aqc2fYad1psw4FOZzUmaB__yu-FZupN07_RHB971rSDpwIsAbsY2f96lYi74-6xhnYThy7tDvnAx7OU67KTscZiwrbpnd5sTaH40baCqxvBI_FA5B_vi65Z-tJo00Uudse6R40Pb0PRqsZ7C2EeS-jF2eNsylnYQJYYwHGDQ6O10qEhcOr5XfeVh3U5qHbuxwd93rxLLOLkOTqS8L286yOVrKj3PhudlJQToxxZUwVLHaLtcroaKWRP2djRAzcfdh-9RuKnxjcvmwsh3cGvclUSz7qTGQ"}}